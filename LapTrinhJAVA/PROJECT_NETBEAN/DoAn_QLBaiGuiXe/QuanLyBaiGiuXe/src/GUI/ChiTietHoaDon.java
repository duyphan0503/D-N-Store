/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;
import Utilities.DBConnect;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileOutputStream;
import java.io.IOException;

/**
 *
 * @author ADMIN
 */
public class ChiTietHoaDon extends javax.swing.JFrame {

    /**
     * Creates new form ChiTieHoaDon
     */
    private int idHoaDon;
    private double tongtien;
    DefaultTableModel tableModel;
    public ChiTietHoaDon(int idHoaDon, double tongtien) {
        initComponents();
        this.idHoaDon = idHoaDon;
        this.tongtien = tongtien;
        
        setLocationRelativeTo(null);
        
        // Cấu hình bảng
        tableModel = new DefaultTableModel();
        tableModel.addColumn("Tên Khách Hàng");
        tableModel.addColumn("Biển Số Xe");
        tableModel.addColumn("Ngày Gửi");
        tableModel.addColumn("Ngày Nhận");
        tableModel.addColumn("Tổng Tiền");
        tblChiTietHD.setModel(tableModel);

        // Hiển thị tổng tiền
        txtTongTien.setText(String.valueOf(tongtien));

        // Tải chi tiết hóa đơn
        loadCTHD();
    }
    
    private void loadCTHD() {
        Connection con = DBConnect.openConnection();
        try {
            PreparedStatement pstmt = con.prepareStatement(
                "SELECT khachhang.hoTen AS tenKhachHang, " +
                "xekhachhang.bienSoXe, " +
                "veguixe.ngayGioGui, " +
                "hoadon.ngayGioNhan, " +
                "hoadon.tongTien " +
                "FROM hoadon " +
                "INNER JOIN veguixe ON hoadon.idVe = veguixe.idVe " +
                "INNER JOIN xekhachhang ON veguixe.idXe = xekhachhang.idXe " +
                "INNER JOIN khachhang ON xekhachhang.idKhachHang = khachhang.idKhachHang " +
                "WHERE hoadon.idHoaDon = ?"
            );
            pstmt.setInt(1, this.idHoaDon); // Tham số idHoaDon
            ResultSet rs = pstmt.executeQuery();

            DefaultTableModel model = (DefaultTableModel) tblChiTietHD.getModel();
            model.setRowCount(0); // Reset dữ liệu bảng trước khi hiển thị mới

            while (rs.next()) {
                Object[] row = {
                    rs.getString("tenKhachHang"),  // Tên khách hàng
                    rs.getString("bienSoXe"),     // Biển số xe
                    rs.getTimestamp("ngayGioGui"), // Ngày giờ gửi
                    rs.getTimestamp("ngayGioNhan"), // Ngày giờ nhận
                    rs.getDouble("tongTien")       // Tổng tiền
                };
                model.addRow(row);
            }
        } catch (SQLException ex) {
            Logger.getLogger(ChiTietHoaDon.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        jPanel2 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        btnHome = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblChiTietHD = new javax.swing.JTable();
        btnINHD = new javax.swing.JButton();
        txtTongTien = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextField1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("CHI TIẾT HÓA ĐƠN");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 452, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        btnHome.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnHome.setText("Quay lại");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        tblChiTietHD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblChiTietHD);

        btnINHD.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnINHD.setText("IN HÓA ĐƠN");
        btnINHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnINHDActionPerformed(evt);
            }
        });

        txtTongTien.setEditable(false);
        txtTongTien.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        txtTongTien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTongTienActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 662, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(328, 328, 328)
                        .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnINHD, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnINHD, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        pack();
    }//GEN-END:initComponents

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        // TODO add your handling code here:
        Main main = new Main();
        main.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnINHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnINHDActionPerformed
        // TODO add your handling code here:
        // Tên file PDF sẽ được xuất ra
        String filePath = "HoaDon_" + idHoaDon + ".pdf";
        Document document = new Document();

        try {
            PdfWriter.getInstance(document, new FileOutputStream(filePath));
            document.open();

            // Tải font hỗ trợ Unicode
            BaseFont baseFont = BaseFont.createFont("C:/Windows/Fonts/arial.ttf", BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
            Font font = new Font(baseFont, 12);

            // Tiêu đề hóa đơn
            // Tạo đối tượng Paragraph cho dòng đầu tiên
            Paragraph title1 = new Paragraph("HỆ THỐNG QUẢN LÝ BÃI GIỮ XE", new Font(baseFont, 18, Font.BOLD));
            title1.setAlignment(Element.ALIGN_CENTER); // Căn giữa dòng đầu
            document.add(title1);

            // Tạo đối tượng Paragraph cho dòng thứ hai
            Paragraph title2 = new Paragraph("CHI TIẾT HÓA ĐƠN", new Font(baseFont, 18, Font.BOLD));
            title2.setAlignment(Element.ALIGN_CENTER); // Căn giữa dòng thứ hai
            document.add(title2);

            Paragraph titleLine = new Paragraph("--------------------------------------------------------------------------------------", font);
            titleLine.setAlignment(Element.ALIGN_CENTER); // Căn giữa dòng thứ hai
            document.add(titleLine);

            // Tạo bảng chi tiết hóa đơn
            PdfPTable table = new PdfPTable(5);
            table.setWidthPercentage(100);
            table.addCell(new PdfPCell(new Phrase("Tên Khách Hàng", font)));
            table.addCell(new PdfPCell(new Phrase("Biển Số Xe", font)));
            table.addCell(new PdfPCell(new Phrase("Ngày Gửi", font)));
            table.addCell(new PdfPCell(new Phrase("Ngày Nhận", font)));
            table.addCell(new PdfPCell(new Phrase("Tổng Tiền", font)));

            // Thêm dữ liệu từ bảng chi tiết hóa đơn
            DefaultTableModel model = (DefaultTableModel) tblChiTietHD.getModel();
            for (int i = 0; i < model.getRowCount(); i++) {
                table.addCell(new PdfPCell(new Phrase(model.getValueAt(i, 0).toString(), font)));
                table.addCell(new PdfPCell(new Phrase(model.getValueAt(i, 1).toString(), font)));
                table.addCell(new PdfPCell(new Phrase(model.getValueAt(i, 2).toString(), font)));
                table.addCell(new PdfPCell(new Phrase(model.getValueAt(i, 3).toString(), font)));
                table.addCell(new PdfPCell(new Phrase(model.getValueAt(i, 4).toString(), font)));
            }

            // Thêm bảng vào PDF
            document.add(table);

            // Đóng file
            document.close();

            javax.swing.JOptionPane.showMessageDialog(this, "Hóa đơn đã được in ra file PDF: " + filePath);
        } catch (Exception ex) {
            javax.swing.JOptionPane.showMessageDialog(this, "Lỗi khi in hóa đơn: " + ex.getMessage(), "Lỗi", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnINHDActionPerformed

    private void txtTongTienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTongTienActionPerformed
        // TODO add your handling code here:
        txtTongTien.setText(String.valueOf(idHoaDon));
    }//GEN-LAST:event_txtTongTienActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChiTietHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChiTietHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChiTietHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChiTietHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                int testidHoaDon = 1; // ID hóa đơn giả định
                int testtongTien = 200000; // Tổng tiền giả định
                new ChiTietHoaDon(testidHoaDon, testtongTien).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnINHD;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable tblChiTietHD;
    private javax.swing.JTextField txtTongTien;
    // End of variables declaration//GEN-END:variables
}
