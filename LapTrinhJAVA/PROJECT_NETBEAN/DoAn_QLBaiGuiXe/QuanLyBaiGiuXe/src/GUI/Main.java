/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;
import DAO.LoginDAO;
import Utilities.DBConnect;
import java.awt.BorderLayout;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author ADMIN
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Menu
     */
    public Main() {
        initComponents();
        // Đặt form hiển thị giữa màn hình
        this.setLocationRelativeTo(null);
        
        txtAccount.setText("Tài khoản "+LoginDAO.getInstance().GetTaiKhoan().getTenDangNhap());
        
        LoadColumnChart();
        LoadPieChart();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        chartColumn = new javax.swing.JPanel();
        chartPie = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        txtAccount = new javax.swing.JMenu();
        qltk = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("PHẦN MỀM QUẢN LÝ BÃI GIỮ XE");

        chartColumn.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout chartPieLayout = new javax.swing.GroupLayout(chartPie);
        chartPie.setLayout(chartPieLayout);
        chartPieLayout.setHorizontalGroup(
            chartPieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        chartPieLayout.setVerticalGroup(
            chartPieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 481, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chartColumn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chartPie, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(chartPie, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chartColumn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jMenuBar1.setBackground(new java.awt.Color(0, 0, 255));

        txtAccount.setText("Tài Khoản");
        txtAccount.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        qltk.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        qltk.setText("Quản lý");
        qltk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qltkActionPerformed(evt);
            }
        });
        txtAccount.add(qltk);

        jMenuItem3.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jMenuItem3.setText("Đăng xuất");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        txtAccount.add(jMenuItem3);

        jMenuItem2.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jMenuItem2.setText("Thoát");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        txtAccount.add(jMenuItem2);

        jMenuBar1.add(txtAccount);

        jMenu1.setText("Quản Lý");
        jMenu1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jMenuItem1.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jMenuItem1.setText("Quản lý Khách Hàng");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem4.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jMenuItem4.setText("Quản Lý Xe");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem5.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jMenuItem5.setText("Quản Lý Vị Trí");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuItem6.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jMenuItem6.setText("Quản Lý Vé");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jMenuItem7.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jMenuItem7.setText("Quản Lý Hóa Đơn");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem7);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 939, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }//GEN-END:initComponents

    private void qltkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qltkActionPerformed
        // TODO add your handling code here:
        if (!LoginDAO.getInstance().GetTaiKhoan().getVaiTro().equals("QuanLy")) {
            JOptionPane.showMessageDialog(null, "Bạn không có quyền truy cập chức năng này!");
            return;
        }
        
        QuanLyTaiKhoan qltk = new QuanLyTaiKhoan();
        qltk.setVisible(true);
        dispose();
    }//GEN-LAST:event_qltkActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        Login mdn = new Login();
        mdn.setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        QuanLyKhachHang qlkh = new QuanLyKhachHang();
        qlkh.setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        QuanLyXeKhachHang qlxekh = new QuanLyXeKhachHang();
        qlxekh.setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        QuanLyViTri qlvt = new QuanLyViTri();
        qlvt.setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        // Xác nhận người dùng muốn thoát không
        int confirm = JOptionPane.showConfirmDialog(
            null, 
            "Bạn có muốn thoát không?", 
            "Xác nhận thoát", 
            JOptionPane.YES_NO_OPTION
        );

        // Nếu người dùng chọn YES thì thoát ứng dụng
        if (confirm == JOptionPane.YES_OPTION) {
            System.exit(0); // Thoát chương trình
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        QuanLyVe qlve = new QuanLyVe();
        qlve.setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
        QuanLyHoaDon qlhd = new QuanLyHoaDon();
        qlhd.setVisible(true);
        dispose();
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    //Load biểu đồ thống kê số lượng gửi xe trong tháng
    private void LoadPieChart() {
        DefaultPieDataset dataset = new DefaultPieDataset();
        Connection con = DBConnect.openConnection(); // Đảm bảo DBConnect.openConnection() trả về kết nối chính xác
        try {
            PreparedStatement pstmt = con.prepareStatement(
                "SELECT YEAR(veguixe.ngayGioGui) AS year, " +
                "MONTH(veguixe.ngayGioGui) AS month, " +
                "COUNT(*) AS total_vehicles " +
                "FROM veguixe " +
                "GROUP BY YEAR(veguixe.ngayGioGui), MONTH(veguixe.ngayGioGui) " +
                "ORDER BY YEAR(veguixe.ngayGioGui) DESC, MONTH(veguixe.ngayGioGui) DESC"
            );
            ResultSet rs = pstmt.executeQuery();
            while (rs.next()) {
                int year = rs.getInt("year");
                int month = rs.getInt("month");
                int totalVehicles = rs.getInt("total_vehicles");

                String category = year + "-" + (month < 10 ? "0" + month : month); // Năm-Tháng
                dataset.setValue(category, totalVehicles);
            }

            // Tạo biểu đồ tròn
            JFreeChart chart = ChartFactory.createPieChart(
                "Thống kê số lượng xe gửi theo tháng", // Tiêu đề biểu đồ
                dataset, // Dữ liệu biểu đồ
                true, // Hiển thị legend (chú thích)
                true, // Hiển thị tooltips
                false // Không cần URL
            );

            // Hiển thị biểu đồ trong chartColumn
            ChartPanel chartPanel = new ChartPanel(chart);
            chartPanel.setPreferredSize(new java.awt.Dimension(500, 400));

            chartColumn.removeAll(); // Xóa nội dung cũ
            chartColumn.add(chartPanel); // Thêm biểu đồ mới
            chartColumn.revalidate(); // Làm mới giao diện
            chartColumn.repaint(); // Vẽ lại
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    //Load biểu đồ thống kê doanh thu trong tháng
    private void LoadColumnChart() {
         DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        Connection con = DBConnect.openConnection(); // Kết nối CSDL
        try {
            // Truy vấn dữ liệu thống kê tổng tiền theo tháng
            PreparedStatement pstmt = con.prepareStatement(
                "SELECT MONTH(hoadon.ngayGioNhan) AS month, " +
                "YEAR(hoadon.ngayGioNhan) AS year, " +
                "SUM(hoadon.tongTien) AS total_money " +
                "FROM hoadon " +
                "GROUP BY YEAR(hoadon.ngayGioNhan), MONTH(hoadon.ngayGioNhan) " +
                "ORDER BY YEAR(hoadon.ngayGioNhan) DESC, MONTH(hoadon.ngayGioNhan) DESC"
            );

            ResultSet rs = pstmt.executeQuery();
            while (rs.next()) {
                int year = rs.getInt("year");
                int month = rs.getInt("month");
                double totalMoney = rs.getDouble("total_money");

                // Gắn dữ liệu vào dataset (Tháng và Tổng tiền)
                String category = "Tháng " + month + " - " + year;
                dataset.addValue(totalMoney, "Tổng tiền", category);
            }

            // Tạo biểu đồ cột (Bar Chart)
            JFreeChart chart = ChartFactory.createBarChart(
                "Thống kê tổng tiền theo tháng", // Tiêu đề biểu đồ
                "Tháng", // Nhãn trục X
                "Tổng tiền (VND)", // Nhãn trục Y
                dataset, // Dataset cho biểu đồ
                PlotOrientation.VERTICAL, // Hướng biểu đồ
                true, // Hiển thị chú thích (legend)
                true, // Hiển thị tooltips
                false // Không hiển thị URLs
            );

            // Hiển thị biểu đồ trong chartColumn
            ChartPanel chartPanel = new ChartPanel(chart);
            chartPanel.setPreferredSize(new java.awt.Dimension(500, 400)); // Đảm bảo kích thước biểu đồ

            chartPie.removeAll(); // Xóa nội dung cũ
            chartPie.setLayout(new java.awt.BorderLayout()); // Đặt layout là BorderLayout
            chartPie.add(chartPanel, BorderLayout.CENTER); // Thêm biểu đồ mới
            chartPie.revalidate(); // Làm mới giao diện
            chartPie.repaint(); // Vẽ lại
        } catch (SQLException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel chartColumn;
    private javax.swing.JPanel chartPie;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JMenuItem qltk;
    private javax.swing.JMenu txtAccount;
    // End of variables declaration//GEN-END:variables
}
