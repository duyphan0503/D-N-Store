/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;
import DTO.HoaDon;
import DAO.HoaDonDAO;
import DTO.ViTri;
import DAO.ViTriDAO;
import DTO.XeKhachHang;
import DAO.XeKhachHangDAO;
import DTO.Ve;
import DAO.VeDAO;
import DTO.TaiKhoan;
import DAO.LoginDAO;
import DTO.VeXe;
import DAO.VeXeDAO;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Timestamp;
import jdk.jfr.Timespan;

/**
 *
 * @author ADMIN
 */
public class QuanLyVe extends javax.swing.JFrame {

    /**
     * Creates new form QuanLyVe
     */
    int idTable = -1;
    DefaultComboBoxModel<XeKhachHang> comboBoxModel;
    DefaultTableModel tableModelViTris;
    DefaultTableModel tableModelXes;
    public QuanLyVe() {
        initComponents();
        this.setLocationRelativeTo(null);                
        
        tableModelViTris = new DefaultTableModel();
        tableModelViTris.addColumn("STT");
        tableModelViTris.addColumn("ID Vị Trí");
        tableModelViTris.addColumn("Tên Vị Trí");
        tableModelViTris.addColumn("Trạng Thái");
        tblVitri.setModel(tableModelViTris);
        displayTableViTri();
        
        tableModelXes = new DefaultTableModel();
        tableModelXes.addColumn("STT");
        tableModelXes.addColumn("Biển Số Xe");
        tableModelXes.addColumn("Loại Xe");
        tableModelXes.addColumn("Ngày Giờ Gửi");
        tableModelXes.addColumn("Trạng Thái");
        tblXe.setModel(tableModelXes);
        
        comboBoxModel = new DefaultComboBoxModel<>();
        XeKhachHang mChon = new XeKhachHang(-1, "---- Chọn xe ----");
        comboBoxModel.addElement(mChon);
        cbxXe.setModel(comboBoxModel);
        LoadXe();
    }

    private void displayTableViTri() {
        tableModelViTris.setRowCount(0);
        List<ViTri> listVT = ViTriDAO.getInstance().LoadListViTri();
        for (int i = 0; i < listVT.size(); i++) {
            ViTri vt = listVT.get(i);
            Object[] dt = {i + 1, vt.getIdViTri(), vt.getTenViTri(), vt.getTrangThai()};
            tableModelViTris.addRow(dt);
        }
    }
    
    private void LoadXe() {
        List<XeKhachHang> loadXe = XeKhachHangDAO.getInstance().LoadListXeKhachHang();
        for (XeKhachHang xe : loadXe) {
                comboBoxModel.addElement(xe);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblVitri = new javax.swing.JTable();
        cbxXe = new javax.swing.JComboBox();
        btnAdd = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblXe = new javax.swing.JTable();
        btnPay = new javax.swing.JButton();
        btnHome = new javax.swing.JButton();
        radioON = new javax.swing.JRadioButton();
        radioOFF = new javax.swing.JRadioButton();
        btnReLoad = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("QUẢN LÝ VÉ GỬI XE");

        tblVitri.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblVitri.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblVitriMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblVitri);

        cbxXe.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbxXe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxXeActionPerformed(evt);
            }
        });

        btnAdd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAdd.setText("Gửi Xe");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        tblXe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tblXe);

        btnPay.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnPay.setText("Thanh toán");
        btnPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayActionPerformed(evt);
            }
        });

        btnHome.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnHome.setText("BACK");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        buttonGroup1.add(radioON);
        radioON.setText("Đang sử dụng");
        radioON.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioONActionPerformed(evt);
            }
        });

        buttonGroup1.add(radioOFF);
        radioOFF.setText("Trống");
        radioOFF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioOFFActionPerformed(evt);
            }
        });

        btnReLoad.setText("RELOAD");
        btnReLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReLoadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(radioOFF, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addComponent(radioON, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnReLoad, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jScrollPane3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(btnPay, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbxXe, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(6, 6, 6))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(radioON)
                            .addComponent(radioOFF)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(btnReLoad, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cbxXe, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnPay, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }//GEN-END:initComponents

    private void tblVitriMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblVitriMouseClicked
        // TODO add your handling code here:
        int row = tblVitri.getSelectedRow();
        List<ViTri> listViTri = ViTriDAO.getInstance().LoadListViTri();
        idTable = listViTri.get(row).getIdViTri();
        
        int selectedRow = tblVitri.getSelectedRow();
        if(!tblVitri.getValueAt(selectedRow, 3).toString().equals("Trong")){
            displayTableXe();
        }        
    }//GEN-LAST:event_tblVitriMouseClicked

    private void displayTableXe() {
        tableModelXes.setRowCount(0);
    
        // Lấy danh sách xe tại vị trí được chọn
        List<VeXe> listVe = VeXeDAO.getInstance().getVeXeList(idTable);

        for (int i = 0; i < listVe.size(); i++) {
            VeXe vexe = listVe.get(i);
            Object[] dt = {i + 1, vexe.getBienSoXe(), vexe.getLoaiXe(), vexe.getNgayGioGui(), vexe.gettrangThai()};
            tableModelXes.addRow(dt);
        }
    }
    
    // Lọc bảng dựa trên trạng thái
    private void LoadListViTriByStatus(String status) {
        tableModelViTris.setRowCount(0); // Xóa dữ liệu cũ
        List<ViTri> listVT = ViTriDAO.getInstance().LoadListViTriByStatus(status); // Truyền `status`
        for (int i = 0; i < listVT.size(); i++) {
            ViTri vt = listVT.get(i);
            Object[] dt = {i + 1, vt.getIdViTri(), vt.getTenViTri(), vt.getTrangThai()};
            tableModelViTris.addRow(dt);
        }
    }
    
    private void cbxXeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxXeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxXeActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // Lấy thông tin xe từ JComboBox
        XeKhachHang selectedXe = (XeKhachHang) cbxXe.getSelectedItem();
        if (selectedXe == null || selectedXe.getIdXe() == -1) {
            // Kiểm tra xe đã được chọn hay chưa
            JOptionPane.showMessageDialog(this, "Vui lòng chọn xe!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Lấy thông tin vị trí từ bảng
        int selectedRow = tblVitri.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn vị trí!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Kiểm tra trạng thái vị trí
        String trangThai = tblVitri.getValueAt(selectedRow, 3).toString();
        if (!trangThai.equals("Trong")) {
            JOptionPane.showMessageDialog(this, "Vị trí đã được sử dụng!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Lấy ID vị trí
        int idViTri = Integer.parseInt(tblVitri.getValueAt(selectedRow, 1).toString());

        // Thực hiện thêm thông tin vào bảng veguixe
        Ve ve = new Ve();
        ve.setIdXe(selectedXe.getIdXe());
        ve.setIdViTri(idViTri);
        ve.setNgayGioGui(new Timestamp(System.currentTimeMillis())); // Thời gian hiện tại
        int idAccount = LoginDAO.getInstance().GetTaiKhoan().getIdTaiKhoan();
        ve.setIdTaiKhoan(idAccount); // ID tài khoản, bạn có thể sửa logic để lấy từ user hiện tại

        boolean isAdded = VeDAO.getInstance().AddVe(ve);
        if (isAdded) {
            JOptionPane.showMessageDialog(this, "Gửi xe thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);

            // Cập nhật trạng thái vị trí
            ViTriDAO.getInstance().UpdateTrangThaiViTri(idViTri, "DangSuDung");

            // Tải lại giao diện
            displayTableViTri();
        } else {
            JOptionPane.showMessageDialog(this, "Gửi xe thất bại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayActionPerformed
        // Kiểm tra nếu chưa chọn vị trí
        if (idTable == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn vị trí có xe để thanh toán!");
            return;
        }

        // Lấy trạng thái của vị trí đã chọn
        int selectedRow = tblVitri.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một vị trí hợp lệ!");
            return;
        }

        String trangThai = tblVitri.getValueAt(selectedRow, 3).toString();
        if (!trangThai.equals("DangSuDung")) {
            JOptionPane.showMessageDialog(this, "Chỉ có thể thanh toán cho vị trí đang sử dụng!");
            return;
        }

        // Lấy thông tin xe đầu tiên tại vị trí đã chọn
        List<VeXe> listVe = VeXeDAO.getInstance().getVeXeList(idTable);
        if (listVe.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Không có xe nào tại vị trí này để thanh toán!");
            return;
        }

        // Lấy thông tin xe và ngày giờ gửi
        VeXe veXe = listVe.get(0); // Lấy xe đầu tiên trong danh sách
        Timestamp ngayGioGui = veXe.getNgayGioGui();
        Timestamp ngayGioNhan = new Timestamp(System.currentTimeMillis()); // Lấy thời gian hiện tại làm ngày nhận

        // Tính số giờ giữa ngày gửi và ngày nhận
        long milliseconds = ngayGioNhan.getTime() - ngayGioGui.getTime();
        long hours = milliseconds / (1000 * 60 * 60); // Tính số giờ
        if (hours <= 0) hours = 1; // Đảm bảo ít nhất là 1 giờ

        // Tính tổng tiền
        double tongTien = hours * 20000; // 20,000 VNĐ mỗi giờ

        // Lấy thông tin tài khoản từ phiên đăng nhập
        int idTaiKhoan = LoginDAO.getInstance().GetTaiKhoan().getIdTaiKhoan(); // ID tài khoản từ phiên đăng nhập

        // Thực hiện thêm hóa đơn
        boolean isAdded = HoaDonDAO.getInstance().AddHoaDon(veXe.getIdVe(), ngayGioNhan, tongTien, idTaiKhoan);

        if (isAdded) {
            // Cập nhật trạng thái vị trí thành "Trống"
            boolean isUpdated = ViTriDAO.getInstance().UpdateTrangThaiViTri(idTable, "Trong");
            boolean isUpdatedVe = VeDAO.getInstance().UpdateTrangThaiVe(veXe.getIdVe(), "OFF");
            if (isUpdated) {
                JOptionPane.showMessageDialog(this, "Thanh toán thành công! Tổng tiền: " + tongTien + " VNĐ");
                displayTableViTri(); // Cập nhật lại bảng vị trí
                tableModelXes.setRowCount(0); // Xóa danh sách xe đã hiển thị
            } else {
                JOptionPane.showMessageDialog(this, "Thanh toán thành công nhưng không cập nhật được trạng thái vị trí!");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Lỗi khi thêm hóa đơn. Vui lòng thử lại!");
        }
    }//GEN-LAST:event_btnPayActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        Main main = new Main();
        main.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnHomeActionPerformed

    private void radioONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioONActionPerformed
        // TODO add your handling code here:
        LoadListViTriByStatus("DangSuDung");
    }//GEN-LAST:event_radioONActionPerformed

    private void radioOFFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioOFFActionPerformed
        // TODO add your handling code here:
        LoadListViTriByStatus("Trong");
    }//GEN-LAST:event_radioOFFActionPerformed

    private void btnReLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReLoadActionPerformed
        // TODO add your handling code here:
        displayTableViTri();
        
        // Bỏ chọn tất cả các Radio Button thông qua ButtonGroup
        buttonGroup1.clearSelection();
    }//GEN-LAST:event_btnReLoadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyVe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyVe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyVe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyVe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLyVe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnPay;
    private javax.swing.JButton btnReLoad;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cbxXe;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JRadioButton radioOFF;
    private javax.swing.JRadioButton radioON;
    private javax.swing.JTable tblVitri;
    private javax.swing.JTable tblXe;
    // End of variables declaration//GEN-END:variables
}
